stages:
  - build
  - test
  - quality
  - deploy

 
variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    -DinstallAtEnd=true
    -DdeployAtEnd=true

cache:
  paths:
    - .m2/repository
  key: "$CI_JOB_NAME"

build_job:
  stage: build
  script:
    - ./mvnw compile $MAVEN_OPTS $MAVEN_CLI_OPTS clean package -DskipTests=true
  image: maven:3.8-openjdk-11
test_job:
  stage: test
  script:
    - ./mvnw test $MAVEN_OPTS $MAVEN_CLI_OPTS 
  image: maven:3.8-openjdk-11
  #artifacts:
  #  name: "Maven artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
  #  paths:
  #    - "**/target"
  #  reports:
  #    # declare the JUnit reports (recursive pattern for multi-module projects)
  #    junit:
  #      - "**/target/*-reports/TEST-*.xml"

code_quality_job:
    stage: quality
    image: docker:stable
    allow_failure: true
    services:
      - docker:stable-dind
    script:
      - mkdir codequality-results
      - docker run
          --env CODECLIMATE_CODE="$PWD"
          --volume "$PWD":/code
          --volume /var/run/docker.sock:/var/run/docker.sock
          --volume /tmp/cc:/tmp/cc
          codeclimate/codeclimate analyze -f html > ./codequality-results/index.html
    artifacts:
      paths:
        - codequality-results

# packages_job:
#   stage: deploy
#   services:
#     - docker:18.09.7-dind
#   variables:
#     DOCKER_HOST: tcp://docker:2375
#   image: laurentgrangeau/oc-devops:latest
#   #image: openjdk:8-alpine
#   script:
#     - apk add --no-cache docker openssh-client openssl-dev
#     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#     - ./mvnw install -PbuildDocker -DskipTests=true -DpushImage $MAVEN_OPTS $MAVEN_CLI_OPTS
